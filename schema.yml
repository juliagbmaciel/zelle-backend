openapi: 3.0.3
info:
  title: Django Banking API
  version: 0.0.0
paths:
  /api/v1/accounts/:
    get:
      operationId: api_v1_accounts_list
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
          description: ''
    post:
      operationId: api_v1_accounts_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Account'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
  /api/v1/accounts/{id}/:
    get:
      operationId: api_v1_accounts_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Account.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
    put:
      operationId: api_v1_accounts_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Account.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Account'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
    patch:
      operationId: api_v1_accounts_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Account.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAccount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAccount'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
    delete:
      operationId: api_v1_accounts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Account.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/address/:
    get:
      operationId: api_v1_address_list
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
          description: ''
    post:
      operationId: api_v1_address_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Address'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
  /api/v1/address/{id}/:
    get:
      operationId: api_v1_address_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this address.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    put:
      operationId: api_v1_address_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this address.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Address'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    patch:
      operationId: api_v1_address_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this address.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAddress'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    delete:
      operationId: api_v1_address_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this address.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/auth/token/login/:
    post:
      operationId: api_v1_auth_token_login_create
      description: Use this endpoint to obtain user authentication token.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenCreate'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenCreate'
          description: ''
  /api/v1/auth/token/logout/:
    post:
      operationId: api_v1_auth_token_logout_create
      description: Use this endpoint to logout user (remove user authentication token).
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/auth/users/:
    get:
      operationId: api_v1_auth_users_list
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: api_v1_auth_users_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /api/v1/auth/users/me/:
    get:
      operationId: api_v1_auth_users_me_retrieve
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_v1_auth_users_me_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_v1_auth_users_me_partial_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_v1_auth_users_me_destroy
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/cards/:
    get:
      operationId: api_v1_cards_list
      parameters:
      - in: query
        name: account
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Card'
          description: ''
    post:
      operationId: api_v1_cards_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Card'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Card'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Card'
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
          description: ''
  /api/v1/cards/{id}/:
    get:
      operationId: api_v1_cards_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Card.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
          description: ''
    put:
      operationId: api_v1_cards_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Card.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Card'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Card'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Card'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
          description: ''
    patch:
      operationId: api_v1_cards_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Card.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCard'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCard'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCard'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
          description: ''
    delete:
      operationId: api_v1_cards_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Card.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/client-all:
    get:
      operationId: api_v1_client_all_retrieve
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/client-legal/:
    get:
      operationId: api_v1_client_legal_list
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientLegal'
          description: ''
    post:
      operationId: api_v1_client_legal_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientLegal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientLegal'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientLegal'
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLegal'
          description: ''
  /api/v1/client-legal/{id}/:
    get:
      operationId: api_v1_client_legal_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Legal Client.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLegal'
          description: ''
    put:
      operationId: api_v1_client_legal_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Legal Client.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientLegal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientLegal'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientLegal'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLegal'
          description: ''
    patch:
      operationId: api_v1_client_legal_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Legal Client.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedClientLegal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedClientLegal'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedClientLegal'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLegal'
          description: ''
    delete:
      operationId: api_v1_client_legal_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Legal Client.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/client-physical/:
    get:
      operationId: api_v1_client_physical_list
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientPhysical'
          description: ''
    post:
      operationId: api_v1_client_physical_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientPhysical'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientPhysical'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientPhysical'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientPhysical'
          description: ''
  /api/v1/client-physical/{id}/:
    get:
      operationId: api_v1_client_physical_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientPhysical'
          description: ''
    put:
      operationId: api_v1_client_physical_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientPhysical'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientPhysical'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientPhysical'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientPhysical'
          description: ''
    patch:
      operationId: api_v1_client_physical_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedClientPhysical'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedClientPhysical'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedClientPhysical'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientPhysical'
          description: ''
    delete:
      operationId: api_v1_client_physical_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/client/by-cpf/:
    get:
      operationId: api_v1_client_by_cpf_retrieve
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/clients/:
    get:
      operationId: api_v1_clients_list
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
          description: ''
    post:
      operationId: api_v1_clients_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Client'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Client'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
  /api/v1/clients/{id}/:
    get:
      operationId: api_v1_clients_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
    put:
      operationId: api_v1_clients_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Client'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Client'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
    patch:
      operationId: api_v1_clients_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedClient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedClient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedClient'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
    delete:
      operationId: api_v1_clients_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/contacts/:
    get:
      operationId: api_v1_contacts_list
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'
          description: ''
    post:
      operationId: api_v1_contacts_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Contact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Contact'
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
  /api/v1/contacts/{id}/:
    get:
      operationId: api_v1_contacts_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
    put:
      operationId: api_v1_contacts_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Contact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Contact'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
    patch:
      operationId: api_v1_contacts_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedContact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedContact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedContact'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
    delete:
      operationId: api_v1_contacts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/loans/:
    get:
      operationId: api_v1_loans_list
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Loan'
          description: ''
    post:
      operationId: api_v1_loans_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Loan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Loan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Loan'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
          description: ''
  /api/v1/loans/{id}/:
    get:
      operationId: api_v1_loans_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Loan.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
          description: ''
    put:
      operationId: api_v1_loans_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Loan.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Loan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Loan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Loan'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
          description: ''
    patch:
      operationId: api_v1_loans_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Loan.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLoan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLoan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLoan'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
          description: ''
    delete:
      operationId: api_v1_loans_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Loan.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/pay-installments/{id}:
    get:
      operationId: api_v1_pay_installments_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoanInstallment'
          description: ''
    put:
      operationId: api_v1_pay_installments_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanInstallment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoanInstallment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoanInstallment'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanInstallment'
          description: ''
    patch:
      operationId: api_v1_pay_installments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLoanInstallment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLoanInstallment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLoanInstallment'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanInstallment'
          description: ''
  /api/v1/transfer/:
    get:
      operationId: api_v1_transfer_retrieve
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_transfer_create
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/view-installments:
    get:
      operationId: api_v1_view_installments_list
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoanInstallment'
          description: ''
    put:
      operationId: api_v1_view_installments_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanInstallment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoanInstallment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoanInstallment'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanInstallment'
          description: ''
    patch:
      operationId: api_v1_view_installments_partial_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLoanInstallment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLoanInstallment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLoanInstallment'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanInstallment'
          description: ''
components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        balance:
          type: number
          format: double
          nullable: true
        agency:
          type: string
          readOnly: true
        number:
          type: string
          readOnly: true
        type:
          type: string
          nullable: true
          maxLength: 20
        limit:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,2})?$
          readOnly: true
        active:
          type: boolean
          readOnly: true
        client:
          type: array
          items:
            type: string
            format: uuid
      required:
      - active
      - agency
      - client
      - id
      - limit
      - number
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - token
      - uid
    Address:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        street:
          type: string
          maxLength: 100
        neighborhood:
          type: string
          maxLength: 75
        city:
          type: string
          maxLength: 75
        state:
          type: string
          maxLength: 2
        zip_code:
          type: string
          maxLength: 10
      required:
      - city
      - id
      - neighborhood
      - state
      - street
      - zip_code
    Card:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        number:
          type: string
          nullable: true
          maxLength: 30
        cvv:
          type: string
          nullable: true
          maxLength: 5
        expiration:
          type: string
          format: date
          nullable: true
        banner:
          type: string
          nullable: true
          maxLength: 20
        situation:
          type: string
          nullable: true
          maxLength: 20
        limit:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,2})?$
          nullable: true
        limit_available:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,2})?$
          nullable: true
        account:
          type: string
          format: uuid
          nullable: true
      required:
      - id
    Client:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        name:
          type: string
          maxLength: 100
        social_name:
          type: string
          nullable: true
          maxLength: 100
        picture:
          type: string
          format: uri
          nullable: true
        birthdate:
          type: string
          format: date
        address_code:
          type: string
          format: uuid
          nullable: true
      required:
      - birthdate
      - id
      - name
      - user
    ClientLegal:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        client:
          allOf:
          - $ref: '#/components/schemas/Client'
          readOnly: true
        state_registration:
          type: string
          maxLength: 200
        municipal_registration:
          type: string
          maxLength: 200
        cnpj:
          type: string
          nullable: true
          maxLength: 40
      required:
      - client
      - id
    ClientPhysical:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        client:
          allOf:
          - $ref: '#/components/schemas/Client'
          readOnly: true
        rg:
          type: string
          maxLength: 18
      required:
      - client
      - id
      - rg
    Contact:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        number:
          type: string
          nullable: true
          maxLength: 20
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        observation:
          type: string
          nullable: true
          maxLength: 50
        client:
          type: string
          format: uuid
          nullable: true
      required:
      - id
    Loan:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        request_date:
          type: string
          format: date
          readOnly: true
        amount_requested:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,2})?$
        cash_interest:
          type: number
          format: double
          nullable: true
        approved:
          type: boolean
          nullable: true
        number_installments:
          type: integer
          nullable: true
        approval_date:
          type: string
          format: date
          nullable: true
        observation:
          type: string
          nullable: true
          maxLength: 200
        account:
          type: string
          format: uuid
          nullable: true
      required:
      - amount_requested
      - id
      - request_date
    LoanInstallment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        installment_number:
          type: integer
        due_date:
          type: string
          format: date
        installment_value:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,2})?$
        pay_day:
          type: string
          format: date
          nullable: true
        amount_paid:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,2})?$
          nullable: true
        loan:
          type: string
          format: uuid
      required:
      - due_date
      - id
      - installment_number
      - installment_value
      - loan
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - new_password
      - token
      - uid
    PatchedAccount:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        balance:
          type: number
          format: double
          nullable: true
        agency:
          type: string
          readOnly: true
        number:
          type: string
          readOnly: true
        type:
          type: string
          nullable: true
          maxLength: 20
        limit:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,2})?$
          readOnly: true
        active:
          type: boolean
          readOnly: true
        client:
          type: array
          items:
            type: string
            format: uuid
    PatchedAddress:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        street:
          type: string
          maxLength: 100
        neighborhood:
          type: string
          maxLength: 75
        city:
          type: string
          maxLength: 75
        state:
          type: string
          maxLength: 2
        zip_code:
          type: string
          maxLength: 10
    PatchedCard:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        number:
          type: string
          nullable: true
          maxLength: 30
        cvv:
          type: string
          nullable: true
          maxLength: 5
        expiration:
          type: string
          format: date
          nullable: true
        banner:
          type: string
          nullable: true
          maxLength: 20
        situation:
          type: string
          nullable: true
          maxLength: 20
        limit:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,2})?$
          nullable: true
        limit_available:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,2})?$
          nullable: true
        account:
          type: string
          format: uuid
          nullable: true
    PatchedClient:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        name:
          type: string
          maxLength: 100
        social_name:
          type: string
          nullable: true
          maxLength: 100
        picture:
          type: string
          format: uri
          nullable: true
        birthdate:
          type: string
          format: date
        address_code:
          type: string
          format: uuid
          nullable: true
    PatchedClientLegal:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        client:
          allOf:
          - $ref: '#/components/schemas/Client'
          readOnly: true
        state_registration:
          type: string
          maxLength: 200
        municipal_registration:
          type: string
          maxLength: 200
        cnpj:
          type: string
          nullable: true
          maxLength: 40
    PatchedClientPhysical:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        client:
          allOf:
          - $ref: '#/components/schemas/Client'
          readOnly: true
        rg:
          type: string
          maxLength: 18
    PatchedContact:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        number:
          type: string
          nullable: true
          maxLength: 20
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        observation:
          type: string
          nullable: true
          maxLength: 50
        client:
          type: string
          format: uuid
          nullable: true
    PatchedLoan:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        request_date:
          type: string
          format: date
          readOnly: true
        amount_requested:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,2})?$
        cash_interest:
          type: number
          format: double
          nullable: true
        approved:
          type: boolean
          nullable: true
        number_installments:
          type: integer
          nullable: true
        approval_date:
          type: string
          format: date
          nullable: true
        observation:
          type: string
          nullable: true
          maxLength: 200
        account:
          type: string
          format: uuid
          nullable: true
    PatchedLoanInstallment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        installment_number:
          type: integer
        due_date:
          type: string
          format: date
        installment_value:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,2})?$
        pay_day:
          type: string
          format: date
          nullable: true
        amount_paid:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,2})?$
          nullable: true
        loan:
          type: string
          format: uuid
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
          maxLength: 128
        last_login:
          type: string
          format: date-time
          nullable: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
        cpf:
          type: string
          maxLength: 50
        username:
          type: string
          maxLength: 80
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - current_password
      - new_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_cpf:
          type: string
          title: Cpf
          maxLength: 50
      required:
      - current_password
      - new_cpf
    TokenCreate:
      type: object
      properties:
        password:
          type: string
        cpf:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
          maxLength: 128
        last_login:
          type: string
          format: date-time
          nullable: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
        cpf:
          type: string
          maxLength: 50
        username:
          type: string
          maxLength: 80
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
      required:
      - cpf
      - id
      - password
      - username
    UserCreate:
      type: object
      properties:
        username:
          type: string
          maxLength: 80
        cpf:
          type: string
          maxLength: 50
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - cpf
      - id
      - password
      - username
    UsernameResetConfirm:
      type: object
      properties:
        new_cpf:
          type: string
          title: Cpf
          maxLength: 50
      required:
      - new_cpf
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
